프로그램1

코드1
try:
    코드2
    코드3
except 에러1:		# try문 들여쓰기 블럭내에서 에러1이 발생할 경우에만 추가 실행
    코드4
except 에러2:		# try문 들여쓰기 블럭내에서 에러2이 발생할 경우에만 추가 실행
    코드5
except:			# try문 들여쓰기 블럭내에서 에러1, 에러2를 제외한 나머지
    코드6		  모든 에러 발생할 경우에만 추가 실행
코드7
               <----------- try ---------->    <------- except ------>
진행: 코드1 -> 코드2(정상)  -> 코드3(정상)                             -> 코드7 -> 종료
      코드1 -> 코드2(에러1)                 -> 코드4                   -> 코드7 -> 종료
      코드1 -> 코드2(정상)  -> 코드3(에러2)          -> 코드5          -> 코드7 -> 종료
      코드1 -> 코드2(에러3)                                   -> 코드6 -> 코드7 -> 종료
      코드1 -> 코드2(정상)  -> 코드3(에러4)                   -> 코드6 -> 코드7 -> 종료

 ※ except 에러종류:
      - 에러 발생시 추가적으로 코드를 실행
    except 에러종류 as 변수:
      - 에러 발생시 만들어지는 에러메시지를
        활용하여 추가적으로 코드를 실행
        에러메시지가 변수에 대입된다.


프로그램2

코드1
try:
    코드2
    코드3
except 에러1		# try문 블럭내에서 에러1이 발생하면 추가 실행
    코드4
except 에러2:		# try문 블럭내에서 에러1이 발생하면 추가 실행
    코드5
except:			# try문 블럭내에서 에러1 또는 에러2를 제외한
    코드6		  그외의 나머지 에러 발생하면 추가 실행
else:			# try문 블럭내에서 에러가 발생하지 않으면 추가 실행
    코드7
finally:		# try문 블럭내에서 에러 발생 유무와 상관없이 추가 실행
    코드8
               <---------- try ----------->    <------- except ------>   <else>  <finally>
진행: 코드1 -> 코드2(정상)  -> 코드3(정상)                             -> 코드7 -> 코드8 -> 종료
      코드1 -> 코드2(에러1)                 -> 코드4                            -> 코드8 -> 종료
      코드1 -> 코드2(정상)  -> 코드3(에러2)          -> 코드5                   -> 코드8 -> 종료
      코드1 -> 코드2(에러3)                                   -> 코드6          -> 코드8 -> 종료
      코드1 -> 코드2(정상)  -> 코드3(에러4)                   -> 코드6          -> 코드8 -> 종료

 ※ else:    - try문 블럭에서 에러가 발생하지 않고, 정상적으로 실행될 경우
               마무리로 실행될 코드가 있을 때 사용한다.
    finally  - try문 블럭에서 에러가 발생하던 또는 하지 않던 반드시
               마무리로 실행될 코드가 있을 때 사용한다.
               open() 함수를 이용하여 파일을 열었을 때, 반드시 close() 함수로 마무리해야한다.



open() 함수는 파일을 읽거나 쓰기 위해 사용하는 함수이다.

사용법: open('파일명', '모드', 옵션)
             '파일명'			: open 함수는 주로 텍스트(txt)파일을 다루기 때문에
					  확장자는 .txt 인 경우가 많다.     ex) 파일명.txt
                       '모드'		: 'r', Read  , 파일에 저장된 내용을 읽어온다.
					  'w', Write , 파일에 내용을 (새로) 기록한다.
					  'a', Append, 파일에 내용을 (추가) 기록한다.
                               옵션	: encoding = 'euckr', 'ansi', 'utf-8'
					  newline = ''

HDD		Function	Buffer(RAM)	Function	Work(RAM)
파일(txt)   ->	open('r')   ->	전체 str    ->	read()      ->	전체 str

						readline()  ->	행 str, 행 str
								- 반복의 횟수를 알 수 없다.
								  while문으로 반복

						readlines() ->	[행 str, 행 str, ...]
								- 반복의 횟수를 알 수 있다.
								  for문으로 반복


