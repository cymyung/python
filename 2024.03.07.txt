변수명의 규칙

 - 문자(대문자, 소문자), 숫자, _ 만으로 구성이 가능하다.
 - 숫자로 시작할 수 없다.
 - 시스템 예약어는 사용할 수 없다.
   : if, else, for, while, pass, continue, True, False

사용할 수 없는 변수명
  1avg		: 숫자로 시작할 수 없다.
  rate%		: _를 제외한 특수문자는 사용할 수 없다.
  my average	: 띄어쓰기는 사용할 수 없다.
  pass		: 시스템 예약어는 사용할 수 없다.

사용할 수 있지만, 추천하지 않는 변수명
 a, t, ol	: 너무 짧은 변수명
 fegyfje	: 의미없이 조합된 변수명
 sum, max, min	: 내장함수이름들

추천하는 변수명 : 너무 짧지 않고, 변수명만으로도 저장된 값을 유추
  city, name, average, kor, eng, index(idx), index(i), number(n), ...

2개이상의 단어를 조합하여 변수명을 만들 때
 snake_case : my_average, [Python] 일반적인 변수명을 만들 때 사용한다.
 PascalCase : MyAverage , 클래스명 만들 때 사용한다.
 camelCase  : myAverage , [C,C++,Java] 일반적인 변수명을 만들 때 사용한다.


문자열(str) 데이터
 : 문자들이 열을 이루는 구조로 만들어졌고, 그 문자들은 아무의미없이
   나열된 형태이다.

         -17          -5  -1
   text = 'Life is too short'
           0         1
           01234567890123456	<- index 는 전체 문자열에서
				   개별적인 1개의 문자를 조회
				   하기 위해 사용되는 정보
 index(인덱스)
   : 연속으로 나열된 전체 문자열에서 각각 문자마다 부여받은 번호
     가장 왼쪽의 문자부터 0이 부여되고, 다음 문자부터 1씩 증가되는
     번호를 부여한다.
     마지막 index번호는 전체 문자열의 숫자에서 -1의 번호 갖는다.

 indexing(인덱싱)
   : 연속으로 나열된 전체 문자열에서 특정한 1개의 문자를 조회(추출)

   변수[index]	-> '문자'
   text[0]	-> 'L'
   text[5]	-> 'i'
   text[16]	-> 't'
   text[-1]	-> 't'

 slicing(슬라이싱)
   : 전체 문자열에서 연속되는 문자열(단어,문장)을 조회(추출)

   변수[start:end]	: start 인덱스이상부터 end 인덱스미만까지의
			  연속적은 문자열(단어,문장)을 조회
                          start 생략시 처음(index 0)부터 조회
                          end   생략시 끝까지 조회
			  start <= 범위 < end

         -17          -5  -1
   text = 'Life is too short'
           0         1
           01234567890123456

   text[0:3]	: 0번 인덱스이상부터 3번 인덱스미만까지의
		  연속적인 문자열을 조회
		  -> 'Lif'
   text[0:4]	  -> 'Life'
   text[8:11]	  -> 'too'
